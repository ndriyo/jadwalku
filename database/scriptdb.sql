CREATE TABLE Users (
    UserID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Email NVARCHAR(255) NOT NULL UNIQUE,
    PasswordHash NVARCHAR(255) NOT NULL,
    FirstName NVARCHAR(100) NOT NULL,
    LastName NVARCHAR(100) NOT NULL,
    Role VARCHAR(20) NOT NULL CHECK (Role IN ('Parent', 'Teacher', 'Admin')),
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME()
);
CREATE TABLE Parents (
    ParentID UNIQUEIDENTIFIER PRIMARY KEY,
    ContactNumber NVARCHAR(20),
    Address NVARCHAR(500),
    FOREIGN KEY (ParentID) REFERENCES Users(UserID)
);
CREATE TABLE Teachers (
    TeacherID UNIQUEIDENTIFIER PRIMARY KEY,
    ContactNumber NVARCHAR(20),
    SubjectsTaught NVARCHAR(500),
    FOREIGN KEY (TeacherID) REFERENCES Users(UserID)
);
CREATE TABLE Admins (
    AdminID UNIQUEIDENTIFIER PRIMARY KEY,
    ContactNumber NVARCHAR(20),
    FOREIGN KEY (AdminID) REFERENCES Users(UserID)
);
CREATE TABLE Schools (
    SchoolID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(255) NOT NULL,
    Address NVARCHAR(500),
    ContactNumber NVARCHAR(20),
    Logo VARBINARY(MAX),
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME()
);
CREATE TABLE Grades (
    GradeID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    SchoolID UNIQUEIDENTIFIER NOT NULL,
    GradeLevel INT NOT NULL,
    Description NVARCHAR(255),
    FOREIGN KEY (SchoolID) REFERENCES Schools(SchoolID)
);
CREATE TABLE AcademicPeriods (
    AcademicPeriodID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    SchoolID UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(100) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    FOREIGN KEY (SchoolID) REFERENCES Schools(SchoolID)
);
CREATE TABLE Classes (
    ClassID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    GradeID UNIQUEIDENTIFIER NOT NULL,
    AcademicPeriodID UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(100) NOT NULL,
    Description NVARCHAR(255),
    FOREIGN KEY (GradeID) REFERENCES Grades(GradeID),
    FOREIGN KEY (AcademicPeriodID) REFERENCES AcademicPeriods(AcademicPeriodID)
);
CREATE TABLE TeacherAssignments (
    TeacherAssignmentID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    TeacherID UNIQUEIDENTIFIER NOT NULL,
    ClassID UNIQUEIDENTIFIER NOT NULL,
    AssignedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (TeacherID) REFERENCES Teachers(TeacherID),
    FOREIGN KEY (ClassID) REFERENCES Classes(ClassID),
    CONSTRAINT UC_TeacherClass UNIQUE (TeacherID, ClassID)
);
CREATE TABLE Students (
    StudentID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    FirstName NVARCHAR(100) NOT NULL,
    LastName NVARCHAR(100) NOT NULL,
    ContactNumber NVARCHAR(20),
    Email NVARCHAR(255),
    ClassID UNIQUEIDENTIFIER NOT NULL,
    EnrollmentStatus VARCHAR(20) DEFAULT 'Enrolled' CHECK (EnrollmentStatus IN ('Enrolled', 'Transferred', 'Withdrawn')),
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (ClassID) REFERENCES Classes(ClassID)
);
CREATE TABLE ParentStudentLinks (
    ParentID UNIQUEIDENTIFIER NOT NULL,
    StudentID UNIQUEIDENTIFIER NOT NULL,
    LinkedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    PRIMARY KEY (ParentID, StudentID),
    FOREIGN KEY (ParentID) REFERENCES Parents(ParentID),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
);
CREATE TABLE SchedulingPeriods (
    SchedulingPeriodID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    AcademicPeriodID UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(100) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (AcademicPeriodID) REFERENCES AcademicPeriods(AcademicPeriodID)
);
CREATE TABLE ScheduleDates (
    ScheduleDateID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    SchedulingPeriodID UNIQUEIDENTIFIER NOT NULL,
    ScheduleDate DATE NOT NULL,
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (SchedulingPeriodID) REFERENCES SchedulingPeriods(SchedulingPeriodID)
);
CREATE TABLE Batches (
    BatchID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ScheduleDateID UNIQUEIDENTIFIER NOT NULL,
    DayNumber INT NOT NULL, -- e.g., Day 1, Day 2
    BatchNumber INT NOT NULL, -- e.g., Batch 1, Batch 2
    StartTime TIME NOT NULL,
    EndTime TIME NOT NULL,
    FOREIGN KEY (ScheduleDateID) REFERENCES ScheduleDates(ScheduleDateID),
    CONSTRAINT UC_ScheduleDateDayBatch UNIQUE (ScheduleDateID, DayNumber, BatchNumber)
);
CREATE TABLE Slots (
    SlotID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    BatchID UNIQUEIDENTIFIER NOT NULL,
    SlotNumber INT NOT NULL, -- e.g., Slot 1 to Slot 5
    IsAvailable BIT DEFAULT 1,
    FOREIGN KEY (BatchID) REFERENCES Batches(BatchID),
    CONSTRAINT UC_BatchSlot UNIQUE (BatchID, SlotNumber)
);
CREATE TABLE Appointments (
    AppointmentID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ParentID UNIQUEIDENTIFIER NOT NULL,
    TeacherID UNIQUEIDENTIFIER NOT NULL,
    SlotID UNIQUEIDENTIFIER NOT NULL,
    SchedulingPeriodID UNIQUEIDENTIFIER NOT NULL,
    ClassID UNIQUEIDENTIFIER NOT NULL,
    Status VARCHAR(20) DEFAULT 'Scheduled' CHECK (Status IN ('Scheduled', 'Completed', 'Cancelled')),
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    UpdatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (ParentID) REFERENCES Parents(ParentID),
    FOREIGN KEY (TeacherID) REFERENCES Teachers(TeacherID),
    FOREIGN KEY (SlotID) REFERENCES Slots(SlotID),
    FOREIGN KEY (SchedulingPeriodID) REFERENCES SchedulingPeriods(SchedulingPeriodID),
    FOREIGN KEY (ClassID) REFERENCES Classes(ClassID)
);
CREATE TABLE ParentPreferences (
    PreferenceID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ParentID UNIQUEIDENTIFIER NOT NULL,
    BatchID UNIQUEIDENTIFIER NOT NULL,
    SlotNumber INT NOT NULL,
    PreferenceRank INT, -- Optional ranking
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (ParentID) REFERENCES Parents(ParentID),
    FOREIGN KEY (BatchID) REFERENCES Batches(BatchID),
    CONSTRAINT UC_ParentPreference UNIQUE (ParentID, BatchID, SlotNumber)
);
CREATE TABLE Waitlists (
    WaitlistID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ParentID UNIQUEIDENTIFIER NOT NULL,
    SlotID UNIQUEIDENTIFIER NOT NULL,
    Position INT NOT NULL,
    CreatedAt DATETIME2 DEFAULT SYSUTCDATETIME(),
    FOREIGN KEY (ParentID) REFERENCES Parents(ParentID),
    FOREIGN KEY (SlotID) REFERENCES Slots(SlotID)
);
